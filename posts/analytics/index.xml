<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分析 on 往东行</title>
    <link>https://salmon3g.github.io/posts/analytics/</link>
    <description>Recent content in 分析 on 往东行</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 13 Dec 2014 10:59:00 +0000</lastBuildDate><atom:link href="https://salmon3g.github.io/posts/analytics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据分析师的技能树</title>
      <link>https://salmon3g.github.io/posts/analytics/analyst-skill-tree/</link>
      <pubDate>Sat, 13 Dec 2014 10:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/analyst-skill-tree/</guid>
      <description>如今流量获取成本不断提高，越来越多的企业从粗放的运营模式转变为精细化运营，企业对员工素质的要求也越来越高。设计师能做数据分析，产品经理能做数据分析，运营也能做数据分析，甚至 CEO 也自己做起了数据分析。 数据分析师想要提高自己的价值，就需要不断提高</description>
    </item>
    
    <item>
      <title>R语言一元线性回归模型</title>
      <link>https://salmon3g.github.io/posts/analytics/simple-linear-regression/</link>
      <pubDate>Tue, 10 Dec 2013 10:13:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/simple-linear-regression/</guid>
      <description>一元线性回归讨论的是一个因变量 Y 与有一个自变量 X 之间的关系，一元线性回归模型也叫一元线性方程。步骤如下： 1、数据准备 x&amp;lt;-c(0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.20,0.21,0.23) y&amp;lt;-c(42.0,43.5,45.0,45.5,45.0,47.5,49.0,53.0,50.0,55.0,55.0,60.0) 2、画图 plot(y ~ 1+x) 从图看出，散点图基本在一条一条直线附近，可以认为 Y 与 X 的关系基本上是线性的。 3、创建模型 lm.sol&amp;lt;-lm(y ~ 1+x) 4、查看结果</description>
    </item>
    
    <item>
      <title>4行Python下载经济学人图表</title>
      <link>https://salmon3g.github.io/posts/analytics/python-download/</link>
      <pubDate>Mon, 14 Oct 2013 10:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/python-download/</guid>
      <description>经常做图表的同学应该知道经济学人，经济学人的图表简洁、专业值得学习。经济学人的图表是每周一期，大概有五十多期，可以借助 Python 下载。 思路： 以一期为基础，将其 URL 按照日期形式 +/-7 拉出所有的 URL 并保存到 txt 中 用 Python 读取 txt 中的 URL 地址并下载 Python 代码如下： import urllib with open(&amp;#39;d://url.txt&amp;#39;, &amp;#39;r&amp;#39;) as</description>
    </item>
    
    <item>
      <title>级联战略/瀑布型战略</title>
      <link>https://salmon3g.github.io/posts/analytics/cascade-strategy/</link>
      <pubDate>Fri, 20 Sep 2013 10:08:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/cascade-strategy/</guid>
      <description>有些公司采用级联战略，即高级别的公司目标通过各个区域，部门和团队的每个单位自上而下的解读，并且分拆目标到各个独立的领域。原则上，这是级联战略基本的工作模式，但正如我们已经看到的空气三明治（空气三明治战略在顶层有着清晰的目标和未来的方向，在底</description>
    </item>
    
    <item>
      <title>分析师的商业敏感度</title>
      <link>https://salmon3g.github.io/posts/analytics/analyst-business-acumen/</link>
      <pubDate>Wed, 18 Sep 2013 09:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/analyst-business-acumen/</guid>
      <description>一个网站分析师需要的不仅仅是分析能力，更重要的是对业务的理解。没有足够的商业敏感度，网站分析师的建议是没有可操作性的。分析师需要身处复杂和真实的商业环境中，这样说提供建议才会与业务相关，才具有实践意义。值得注意的是，分析师需要掌握以下业务相</description>
    </item>
    
    <item>
      <title>辨别虚假流量</title>
      <link>https://salmon3g.github.io/posts/analytics/identify-false-traffic/</link>
      <pubDate>Fri, 08 Feb 2013 09:06:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/identify-false-traffic/</guid>
      <description>为网站导入更多流量，会和多种渠道合作，不排除有些渠道有作弊行为，为网站导入很多虚假流量。辨别虚假流量步骤大致如下： 1、高级细分分隔流量。使用高级细分将这部分广告流量和其他流量进行分隔，在其他报告中可以选择该细分。 2、流量产生时间。按小时或者</description>
    </item>
    
    <item>
      <title>GA电子商务追踪设置</title>
      <link>https://salmon3g.github.io/posts/analytics/tracking-ecommerce/</link>
      <pubDate>Sat, 07 Jul 2012 10:10:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/tracking-ecommerce/</guid>
      <description>一、启用电子商务追踪 在 Google Analytics 配置文件中启用电子商务追踪功能。 二、定制电子商务追踪代码 将下面电子商务追踪代码添加到订单成功页面。 &amp;lt;script type=”text/javascript”&amp;gt; var _gaq = _gaq || []; _gaq.push([&#39;_setAccount&#39;, &#39;UA-XXXXX-X&#39;]); _gaq.push([&#39;_setDomainName&#39;, &#39;wangdongxing.com&#39;]); _gaq.push([&#39;_setAllowLinker&#39;, true]); _gaq.push([&#39;_trackPageview&#39;]); _gaq.push([&#39;_addTrans&#39;, &#39;1234&#39;, // transaction ID - required &#39;Womens Apparel&#39;, // affiliation or store name &#39;28.28&#39;, // total -</description>
    </item>
    
    <item>
      <title>GA虚拟页面和事件追踪</title>
      <link>https://salmon3g.github.io/posts/analytics/virtual-page-event-track/</link>
      <pubDate>Sun, 13 May 2012 10:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/virtual-page-event-track/</guid>
      <description>有时，我们需要监测一些不能产生页面浏览的行为，比如点击友情链接跳转到其他网站、点击下载网站附件以及点击 Flash 等内容。Google Analytics 监测类似这些内容常用的统计方法是虚拟页面和事件追踪。 1、Google Analytics 虚拟页面 虚拟页面顾名思义就是制作一个并非真实</description>
    </item>
    
    <item>
      <title>GA跨域追踪</title>
      <link>https://salmon3g.github.io/posts/analytics/cross-domain-tracking/</link>
      <pubDate>Sat, 03 Mar 2012 08:23:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/cross-domain-tracking/</guid>
      <description>Google Analytics 跨域追踪设置用到四个方法有：_setDomainName()、_setAllowLinker()、_link()和 _linkByPost()。_setDomainName() 用来设置 GATC cookies 的域名名字，下面是允许跨域追踪的设置，如果不允许跨</description>
    </item>
    
    <item>
      <title>GA流量来源分类及覆盖规则</title>
      <link>https://salmon3g.github.io/posts/analytics/source-overwrite/</link>
      <pubDate>Thu, 19 Jan 2012 11:31:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/source-overwrite/</guid>
      <description>Google Analytics 中对流量来源各渠道进行了分类，同时各类流量来源优先级也不相同，也就存在各流量来源渠道的覆盖规则。Google Analytics 流量来源渠道分类如下： 一、市场投放（Campaigns） 多指广告活动流量，最常见的是 PPC 广告，Google 的 Adwords（无需</description>
    </item>
    
    <item>
      <title>Google Analytics cookie</title>
      <link>https://salmon3g.github.io/posts/analytics/ga-cookie/</link>
      <pubDate>Mon, 02 Jan 2012 09:21:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/ga-cookie/</guid>
      <description>Google Analytics cookie 是访问添加过 Google Analytics 监测的网站时生成的， Google Analytics cookie 最为常见的有四个：__utma、__utmb、__utmc 和 __utmz。 __utma：默认有效期两年，用来识别访问者和访问次数。包含 6 个字段，从左到右分别代表域哈希值、访问者 ID（唯一）、首</description>
    </item>
    
    <item>
      <title>第一方cookie和第三方cookie</title>
      <link>https://salmon3g.github.io/posts/analytics/cookie/</link>
      <pubDate>Fri, 25 Nov 2011 10:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/cookie/</guid>
      <description>第一方cookie和第三方cookie都是相对当前访问的网站来说的，比如我访问了wangdongxing.com我的博客，而新浪（sina.com.cn）在我的博客中投放了一个广告（尽管不可能），并加入了它的数据监测代码，那么在我的电脑本地</description>
    </item>
    
    <item>
      <title>session是什么，与cookie的关系</title>
      <link>https://salmon3g.github.io/posts/analytics/session/</link>
      <pubDate>Wed, 23 Nov 2011 08:21:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/session/</guid>
      <description>session 的中文译名叫做“会话”，原意指有始有终的一系列动作消息，比如我们从拨通电话到挂掉电话的一系列过程可以称之为一个 session 。session 是表示一个持续连接的状态，一般指访客打开浏览器浏览一个网站开始到关闭浏览器（即浏览器的进程从开启到结束）。se</description>
    </item>
    
    <item>
      <title>网络广告收费模式</title>
      <link>https://salmon3g.github.io/posts/analytics/advertising-model/</link>
      <pubDate>Wed, 02 Mar 2011 08:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/advertising-model/</guid>
      <description>CPA (Cost-per-Action) 每次行动的费用，即根据每个访问者对网络广告所采取的行动收费的定价模式。对于用户行动有特别的定义，包括形成一次交易、获得一个注册用户、或者对网络广告的一次点击等。 CPC (Cost-per-click) 每次点击的费用。根据广告被点击的次数收费。如关键词广告一般采用这种定价模</description>
    </item>
    
    <item>
      <title>Google Analytics 代码部署</title>
      <link>https://salmon3g.github.io/posts/analytics/ga-js/</link>
      <pubDate>Tue, 01 Mar 2011 07:59:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/ga-js/</guid>
      <description>Google Analytics 早在 2009 年就推出异步加载的方式了，不但保证了网页能更快的加载跟踪代码，对网站打开速度也不会产生影响了，下面是常见的部署 GATC（Google Analytics 监测代码）方式，可根据实际情况进行部署。 方式一： 将 GATC 放到网站所有要监测的网页的 标签前。 &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; var _gaq =</description>
    </item>
    
    <item>
      <title>htaccess实现URl标准化</title>
      <link>https://salmon3g.github.io/posts/analytics/url/</link>
      <pubDate>Mon, 06 Dec 2010 09:06:00 +0000</pubDate>
      
      <guid>https://salmon3g.github.io/posts/analytics/url/</guid>
      <description>URL标准化在SEO中是一个比较重要的环节，同时存在不同的网址版本，不但可能造成复制，还不能正确的集中权重。目前大多数网站，绑定域名都有带WWW和不带两个版本，甚至很多网站同时绑定多个域名。经过处理（跳转、CNAME……），对于访问者来说可</description>
    </item>
    
  </channel>
</rss>
